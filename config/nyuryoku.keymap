/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#define BASE 0
#define NUMPAD 1
#define KBS 2

/ {
    behaviors {
        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
            ignore-modifiers;
        };
        td0: capitalization_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&skq LSHFT>, <&kp CLCK>;
        };
        lse0: layerSwitchEncoder {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&to>, <&to>;
        };
    };
    combos {
        compatible = "zmk,combos";
        combo_equal {
            timeout-ms = <200>;
            key-positions = <30 27 10>;
            bindings = <&kp EQUAL>;
            layers = <0>;
        };
        combo_plus {
            timeout-ms = <200>;
            key-positions = <31 4 10 13>;
            bindings = <&kp LPAR>;
            layers = <0>;
        };
        combo_forwardsqrbracket {
            timeout-ms = <200>;
            key-positions = <6 13 27 31>;
            bindings = <&kp LBKT>;
            layers = <0>;
        };
        combo_backwardsqrbracket {
            timeout-ms = <200>;
            key-positions = <31 13 27 31>;
            bindings = <&kp RBKT>;
            layers = <0>;
        };
        combo_asterisk {
            timeout-ms = <200>;
            key-positions = <30 13 9>;
            bindings = <&kp STAR>;
            layers = <0>;
        };
        combo_exclamation {
            timeout-ms = <200>;
            key-positions = <30 8 10>;
            bindings = <&kp EXCL>;
            layers = <0>;
        };
        combo_at {
            timeout-ms = <200>;
            key-positions = <30 12 19>;
            bindings = <&kp AT>;
            layers = <0>;
        };
        combo_hash {
            timeout-ms = <200>;
            key-positions = <30 18 12 13 18>;
            bindings = <&kp HASH>;
            layers = <0>;
        };
        combo_percent {
            timeout-ms = <200>;
            key-positions = <30 4 9 8 19>;
            bindings = <&kp PERCENT>;
            layers = <0>;
        };
        combo_dollar {
            timeout-ms = <200>;
            key-positions = <30 14 10 10 9>;
            bindings = <&kp DOLLAR>;
            layers = <0>;
        };
        combo_caret {
            timeout-ms = <200>;
            key-positions = <30 7 9 19>;
            bindings = <&kp CARET>;
            layers = <0>;
        };
        combo_forwardparanthesis {
            timeout-ms = <200>;
            key-positions = <30 10 4 9 19 18>;
            bindings = <&kp LPAR>;
            layers = <0>;
        };
        combo_backwardparanthesis {
            timeout-ms = <200>;
            key-positions = <30 9 4 9 19 18>;
            bindings = <&kp LPAR>;
            layers = <0>;
        };
        combo_question {
            timeout-ms = <200>;
            key-positions = <30 27 13 19>;
            bindings = <&kp QMARK>;
            layers = <0>;
        };
        combo_forwardbrace {
            timeout-ms = <200>;
            key-positions = <30 6 31 9 8>;
            bindings = <&kp LBRC>;
            layers = <0>;
        };
        combo_backwardbrace {
            timeout-ms = <200>;
            key-positions = <30 31 31 9 8>;
            bindings = <&kp RBRC>;
            layers = <0>;
        };
        combo_tilde {
            timeout-ms = <200>;
            key-positions = <30 19 10 17>;
            bindings = <&kp TILDE>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // This is a sample keymap intended to be replaced with your own
        default_layer {
            label="Base";
            bindings = <
                &kp Y      &kp P      &kp PERIOD &kp COMMA &kp APOS     &kp C_PP       &kp EQUAL  &kp L      &kp R      &kp C      &kp G       &kp F
                &kp D      &kp I      &kp U      &kp O      &kp S     &kp A            &kp BSLH   &kp MINU   &kp S      &kp N      &kp T       &kp H
                &kp B      &kp X      &kp K      &kp J      &kp Q     &kp SEMI         &kp RCTRL  &kp TAB    &kp Z      &kp V      &kp W    &kp M
                &td0       &kp BSPC   &kp TAB    &none      &none     &none            &none      &none      &none      &kp ESC  &kp SPACE   &kp ENTER
                &kp BSPC   &none      &none      &none      &none     &kp C_PP         &kp EQUAL      &none      &none      &none      &none       &kp B
        >;
        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN &lse0 BASE NUMPAD &inc_dec_kp C_PLAY C_PAUSE>;
        };
        numpad_function_layer {
            label="Numpad";
            bindings = <
                &none     &kp N9     &kp N8     &kp N7     &none    &kp C_PP         &kp EQUAL   &kp F5      &kp F4      &kp F3      &kp F2     &kp F1     
                &none     &kp N6     &kp N5     &kp N4     &kp N0   &none            &kp BSLH    &kp F10     &kp F8      &kp F8      &kp F7      &kp F6    
                &none     &kp N3     &kp N2     &kp N1     &none    &kp LALT         &kp RALT    &kp TAB     &kp RCTRL   &none       &kp F12     &kp F11            
                &td0      &kp BSPC   &kp TAB    &none      &none    &none            &none       &none       &none       &kp ESC     &kp SPACE  &kp ENTER
                &kp B     &none      &none      &none      &none    &kp C_PP         &kp EQUAL   &none       &none       &none       &none      &kp B
        >;
        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN &lse0 BASE KBS  &inc_dec_kp C_PLAY C_PAUSE>;
        };
        settings_layer {
            label="KBS";
            bindings = <
                &bootloader &none      &none      &none      &none     &none            &none       &none      &none      &none      &bt BT_SEL 0 &bt BT_SEL 1
                &bt BT_CLR  &none      &none      &none      &none     &none            &none       &none      &none      &none      &bt BT_SEL 2 &bt BT_SEL 3
                &none       &none      &none      &none      &none     &none            &none       &none      &none      &none      &bt BT_SEL 4 &bt BT_SEL 5
                &none       &none      &none      &none      &none     &none            &none       &none      &none      &none      &none        &none
                &none       &none      &none      &none      &none     &none            &none       &none      &none      &none      &none        &none
            >;
        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN &lse0 NUMPAD KBS &inc_dec_kp C_PLAY C_PAUSE>;
        };
    };
};
